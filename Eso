class CircularQueue:
    def __init__(self, max_size):
        self.max_size = max_size
        self.queue = [None] * max_size
        self.head = 0
        self.tail = 0
        self.size = 0

    def enqueue(self, e):
        if self.size == self.max_size:
            raise Exception("Cola llena...")
        self.queue[self.tail] = e
        self.tail = (self.tail + 1) % self.max_size
        self.size += 1

    def dequeue(self):
        if self.size == 0:
            raise Exception("Cola vacía...")
        e = self.queue[self.head]
        self.queue[self.head] = None
        self.head = (self.head + 1) % self.max_size
        self.size -= 1
        return e

    def first(self):
        if self.size == 0:
            raise Exception("Cola vacía...")
        return self.queue[self.head]

    def is_empty(self):
        return self.size == 0

    def __len__(self):
        return self.size
